---
subcategory: "manifest"
page_title: "Kubernetes: kubernetes_annotations"
description: |-
  This resource allows Terraform to manage the annotations for a resource that already exists
---

# {{ .Name }}

{{ .Description }}

{{ .SchemaMarkdown }}

## Example Usage

{{tffile "examples/resources/annotations/example_1.tf"}}

## Example Usage: Patching resources which contain a pod template, e.g Deployment, Job

{{tffile "examples/resources/annotations/example_2.tf"}}

## Argument Reference

The following arguments are supported:

~> NOTE: At least one of `annotations` or `template_annotations` is required.

* `api_version` - (Required) The apiVersion of the resource to be annotated.
* `kind` - (Required) The kind of the resource to be annotated.
* `metadata` - (Required) Standard metadata of the resource to be annotated.
* `annotations` - (Optional) A map of annotations to apply to the resource.
* `template_annotations` - (Optional) A map of annotations to apply to the pod template within the resource.
* `force` - (Optional) Force management of annotations if there is a conflict. Defaults to `false`.
* `field_manager` - (Optional) The name of the [field manager](https://kubernetes.io/docs/reference/using-api/server-side-apply/#field-management). Defaults to `Terraform`.

## Nested Blocks

### `metadata`

#### Arguments

* `name` - (Required) Name of the resource to be annotated.
* `namespace` - (Optional) Namespace of the resource to be annotated.

## Import

This resource does not support the `import` command. As this resource operates on Kubernetes resources that already exist, creating the resource is equivalent to importing it.
