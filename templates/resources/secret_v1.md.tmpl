---
subcategory: "core/v1"
page_title: "Kubernetes: kubernetes_secret_v1"
description: |-
  The resource provides mechanisms to inject containers with sensitive information while keeping containers agnostic of Kubernetes.
---

# {{ .Name }}

{{ .Description }}

~> Read more about security properties and risks involved with using Kubernetes secrets: [Kubernetes reference](https://kubernetes.io/docs/concepts/configuration/secret/#information-security-for-secrets)

~> **Note:** All arguments including the secret data will be stored in the raw state as plain-text. [Read more about sensitive data in state](/docs/state/sensitive-data.html).

{{ .SchemaMarkdown }}

## Example Usage

{{tffile "examples/resources/secret_v1/example_1.tf"}}

## Example Usage (Docker config)

### Docker config file

{{tffile "examples/resources/secret_v1/example_2.tf"}}

### Username and password

{{tffile "examples/resources/secret_v1/example_3.tf"}}

This is equivalent to the following kubectl command:

```sh
$ kubectl create secret docker-registry docker-cfg --docker-server=${registry_server} --docker-username=${registry_username} --docker-password=${registry_password} --docker-email=${registry_email}
```

## Example Usage (Service account token)

{{tffile "examples/resources/secret_v1/example_4.tf"}}

## Import

Secret can be imported using its namespace and name, e.g.

```
$ terraform import kubernetes_secret_v1.example default/my-secret
```
