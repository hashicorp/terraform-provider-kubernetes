name: Acceptance Tests (EKS)

on:
  workflow_dispatch: 
    inputs:
      region: 
        description: The AWS region 
        default: us-east-1
      clusterVersion:
        description: The EKS cluster version
        default: 1.21
      nodeCount:
        description: The number of cluster nodes to provision 
        default: 2
      instanceType:
        description: The type of EC2 instance to use for cluster nodes
        default: m5.large
      runTests:
        description: The regex passed to the -run option of `go test`
        default: ".*"
      terraformVersion:
        description: Terraform version 
        default: 1.1.8

jobs:
  acceptance_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read go-version
        id: go-version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.go-version
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.go-version.outputs.content }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ github.event.inputs.region }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-session-name: github-actions-tests-${{ github.run_number }}
          role-duration-seconds: 14400
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ github.event.inputs.terraformVersion }}
      - name: Provision EKS Cluster
        working-directory: ./kubernetes/test-infra/eks
        env:
          TF_VAR_region: ${{ github.event.inputs.region }}
          TF_VAR_cluster_version: ${{ github.event.inputs.clusterVersion }}
          TF_VAR_node_count: ${{ github.event.inputs.nodeCount }}
          TF_VAR_instance_type: ${{ github.event.inputs.instanceType }}
        run: |
          terraform init
          terraform apply --auto-approve
      - name: Run Acceptance Test Suite
        env:
          TF_ACC_TERRAFORM_VERSION: ${{ github.event.inputs.terraformVersion }}
          TESTARGS: -run '${{ github.event.inputs.runTests }}'
          KUBE_CONFIG_PATH: ${{ github.workspace }}/kubernetes/test-infra/eks/kubeconfig
        run: | 
          make testacc
      - name: Destroy EKS cluster
        if: always() # we should destroy the cluster even if the tests fail
        working-directory: ./kubernetes/test-infra/eks
        run: |
          terraform destroy --auto-approve