name: Acceptance Tests (GKE)

on:
  workflow_dispatch:
    inputs:
      region:
        description: The GKE region
        default: us-east1
      zone:
        description: The GKE zone
        default: us-east1-b
      kubernetesVersion:
        description: The GKE kubernetes version
        default: 1.23
      workersCount:
        description: The number of cluster nodes to provision
        default: 2
      nodeMachineType:
        description: The type of GKE instance to use for cluster nodes
        default: e2-standard-2
      runTests:
        description: The regex passed to the -run option of `go test`
        default: ".*"
      terraformVersion:
        description: Terraform version
        default: 1.2.4

env:
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
  GOOGLE_PROJECT: ${{ secrets.GOOGLE_PROJECT }}
  GOOGLE_REGION: ${{ github.event.inputs.region }}
  GOOGLE_ZONE: ${{github.event.inputs.zone}}

jobs:
  acceptance_tests:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Read go-version
        id: go-version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./.go-version
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ steps.go-version.outputs.content }}
      - name: Authenticate to Google Cloud
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}
          access_token_lifetime: '10800s'
      - name: Install Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ github.event.inputs.terraformVersion }}
          terraform_wrapper: false
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"
        with:
          install_components: "beta"
      - name: "Initialize gcloud SDK"
        run: "gcloud init"
      - name: Provision GKE Cluster
        working-directory: ./kubernetes/test-infra/gke
        env:
          TF_VAR_kubernetes_version: ${{ github.event.inputs.kubernetesVersion }}
          TF_VAR_workers_count: ${{ github.event.inputs.workersCount }}
          TF_VAR_node_machine_type: ${{ github.event.inputs.nodeMachineType }}
        run: |
          env
          terraform init
          terraform apply -auto-approve
          export CLUSTER_NAME=`terraform output -raw cluster_name`
          echo "GOOGLE_CLUSTER_NAME=$CLUSTER_NAME" >> $GITHUB_ENV
          gcloud beta container clusters update --enable-service-externalips $CLUSTER_NAME --zone $GOOGLE_ZONE
      - name: Get GKE Credentials
        env:
          KUBECONFIG: ${{ github.workspace }}/kubernetes/test-infra/gke/kubeconfig
        uses: 'google-github-actions/get-gke-credentials@v0'
        with:
          cluster_name: ${{ env.GOOGLE_CLUSTER_NAME }}
          location: ${{github.event.inputs.zone}}
          project_id: ${{ secrets.GOOGLE_PROJECT }}
          use_auth_provider: true
      - name: Run Acceptance Test Suite
        env:
          TF_ACC_TERRAFORM_VERSION: ${{ github.event.inputs.terraformVersion }}
          TESTARGS: -run '${{ github.event.inputs.runTests }}'
          KUBE_CONFIG_PATH: ${{env.KUBECONFIG}}
        run: |
          make testacc
      - name: Destroy GKE cluster
        if: always() # we should destroy the cluster even if the tests fail
        working-directory: ./kubernetes/test-infra/gke
        run: |
          terraform destroy --auto-approve
